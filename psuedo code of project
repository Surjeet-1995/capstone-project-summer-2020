// this is main code of our project and it is subjected to change as per progress. the final code will be uploaded on completion of project //

#include <iobb.h> // Library to access GPIO
#include <time.h>  //Time Library   
#include <stdio.h> // Standard IO library
#include <unistd.h> //defines miscellaneous symbolic constants and types, and declares miscellaneous functions
#include <stdlib.h> //Includes some Standard C Libraries used for trigerring Command line
#include <string.h> // For using String Functions

long int start, stop, count; // Variables to store values

clock_t before, end; // To store Time of UltraSonic Sensor

clock_t onlinePing; // To track time of online ping

int letterCount = 0;  // To store letter count
int letterCountOld=0; // To store old value of Letter Count
int cflag = 1; // Flag to stabilize count

int main(void)  
{  
  iolib_init();  // Initialize the IOBB Library
  iolib_setdir(8, 10, DigitalOut);  // Setting Pin 10 or Port 8 as Output
  iolib_setdir(8, 9, DigitalIn);    // Setting Pin 9 or Port 8 as Input
  printf("STARTED \n");
  iolib_delay_ms(500); // Small Delay
  
  
  onlinePing = clock(); //Store Starting Time
  
  while(1)  
  {  
    pin_high(8, 10);  // Trigger Ultrasonic Sensor
    usleep(10); 
    pin_low(8, 10); 
    
    //iolib_delay_ms(1);
    while(is_low(8, 9))  // Wait until Echo Pulse starts
    {		
			count+= 1;
			before = clock();
			
			if(count > 5000)
			{
				printf("Kindly Check Wiring\n");
				count = 0;
				break;
			}
			
			
	}
	
	while(is_high(8, 9)) // Wait and store Echo pulse time
	{	
		count += 0;
		end = clock();
		if(count > 5000)
			{
				printf("Kindly Check Wiring\n");
				count = 0;
				break;
			}
			
	}
    
    clock_t difference = end - before; // Get Absolute time of Echo Pulse
    
    printf("%d    ",before);
    printf("%d    ",end);
    printf("%d    Distance: ",difference); //Print time taken by ultasonic to travel
    difference = difference/30; // Get a rough value in centimeters
    printf("%d cm. \n",difference);
    
    
    if(difference < 10 && cflag == 1) // If  Ultrasonic value less than 10, (Letter sensed )
    {
		letterCount += 1; // Increase the count
		cflag = 0; // Make Flag 0 so that 1 letter is not counted as many
		printf("Got a Letter \n");
		iolib_delay_ms(500); // Small Delay
	}
	if(difference > 10 && cflag == 0) // When letter passes and no more in front of sensor
    {
		cflag = 1; // Make flag as 1 means ready to sense another letter
	}
    
    
    pin_low(8, 10); // Make sure trigger pin is low
    iolib_delay_ms(60);  // Small delay to settle trigger and Echo
    start = 0;
    count=0;
    
    
    ///////////////////////////////////////////////////
    
    if((clock() - onlinePing) > 16*100000) // If LAst ping happened before more than 16 seconds
    {
		
	printf("Online Time \n"); // Time to update values online
    
    if(letterCount > letterCountOld) // Check if any new letter has arrived since last time we updated 
    {
		
	printf("New Letter Arrived, Updating Online  \n"); 
    char d[5]; // A char array to store count
	
	char c[] = "curl \"https://api.thingspeak.com/update.json?api_key=9U5J3NOPMSLJQY1M&field1=";
	// Above is the base url with Write API key
	sprintf(d, "%d", letterCount); // Convert number to char array
	strcat(c,d); // Format BAse url to add new letter count
	strcat(c,"\"");// Add termination
	
	printf("#%s#", c); // SHow the final link at Stdout
	
	system(c); // Ping the Web link using Command line
	
     //system("curl \"https://api.thingspeak.com/update.json?api_key=9U5J3NOPMSLJQY1M&field1=153\"");
     
     printf("\n Done4 \n"); // Print done
	}
	
	onlinePing = clock(); // Update the new Online ping time
     
	}
     
     //////////////////////////////////////////////////////////////////////
    
      
  }  
  iolib_free();  
  return(0);  
  
  
}  

